// models/items.js
import { DataTypes } from "sequelize";
import sequelize from "../config/database";

const Items = sequelize.define(
  "Items",
  {
    id: {
      type: DataTypes.INTEGER,
      autoIncrement: true,
      primaryKey: true,
    },
    barcode: DataTypes.DECIMAL(13),
    description: {
      type: DataTypes.STRING(120),
      allowNull: false,
    },
    ipi: {
      type: DataTypes.DECIMAL(5, 2),
      defaultValue: 0,
    },
    reference: DataTypes.STRING(60),
    application: DataTypes.STRING(80),
    volume: {
      type: DataTypes.DECIMAL(8, 2),
      defaultValue: 0,
    },
    classification: DataTypes.STRING(4),
    active: {
      type: DataTypes.BOOLEAN,
      allowNull: true,
    },
    manufacturerCode: DataTypes.STRING(20),
    photo: DataTypes.STRING(32),
    subGroup: DataTypes.DECIMAL(4),
    group: DataTypes.DECIMAL(4),
    unit: DataTypes.STRING(2),
    color: DataTypes.STRING(4),
    product: DataTypes.STRING(4),
    packaging: DataTypes.STRING(4),
    brand: DataTypes.STRING(4),
    model: DataTypes.STRING(4),
    rate: DataTypes.STRING(2),
    supplier: DataTypes.STRING(4),
    service: DataTypes.BOOLEAN,
    cmsAtSight: {
      type: DataTypes.DECIMAL(6, 2),
      defaultValue: 0,
    },
    cmsOnCredit: {
      type: DataTypes.DECIMAL(6, 2),
      defaultValue: 0,
    },
    receiptDescription: DataTypes.STRING(30),
    weight: {
      type: DataTypes.DECIMAL(6, 3),
      defaultValue: 0,
    },
    packagingCode: DataTypes.STRING(5),
    secondaryRate: DataTypes.STRING(2),
    used: { type: DataTypes.BOOLEAN, defaultValue: false },
    useSerial: DataTypes.BOOLEAN,
    externalCmsAtSight: DataTypes.DECIMAL(6, 2),
    externalCmsOnCredit: DataTypes.DECIMAL(6, 2),
    ncm: DataTypes.STRING(8),
    partCode: DataTypes.STRING(8),
    activeIngredient: DataTypes.STRING(100),
    icmsBaseValue: DataTypes.DECIMAL(12, 2),
    reduction: DataTypes.DECIMAL(12, 2),
    blockedDiscount: DataTypes.BOOLEAN,
    lab: DataTypes.STRING(4),
    dependencyItem: DataTypes.STRING(5),
    purchaseUnit: DataTypes.STRING(4),
    saleUnit: DataTypes.STRING(4),
    taxableUnit: DataTypes.STRING(4),
    specificProduct: DataTypes.INTEGER,
    priceChangeAllowed: DataTypes.BOOLEAN,
    descriptionChangeAllowed: DataTypes.BOOLEAN,
    stockControl: { type: DataTypes.BOOLEAN, defaultValue: true },
    additionalInfo: DataTypes.STRING(200),
    manufacturer: DataTypes.STRING(4),
    priceChangePermission: DataTypes.BOOLEAN,
    itemGender: DataTypes.STRING(2),
    itemType: DataTypes.STRING(2),
    hasAssembly: DataTypes.BOOLEAN,
    assemblyPoints: DataTypes.INTEGER,
    lastUpdate: DataTypes.DATE,
    priceGroup: DataTypes.STRING(5),
    priceGroupDescription: DataTypes.STRING(40),
    grossWeight: DataTypes.DECIMAL(6, 3),
    spacePriceTable: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
    },
    merchandiseOrigin: DataTypes.STRING(2),
    cest: DataTypes.STRING(7),
    fractional: DataTypes.BOOLEAN,
    expirationControl: DataTypes.BOOLEAN,
    purchaseVolume: DataTypes.DECIMAL(8, 2),
    smallScaleCest: DataTypes.BOOLEAN,
    supplierCNPJ: DataTypes.STRING(19),
    scaleLoad: DataTypes.BOOLEAN,
    expirationDate: DataTypes.DATE,
    icmsReduction: DataTypes.DECIMAL(6, 4),
    glgnn: DataTypes.DECIMAL(6, 4),
    glgni: DataTypes.DECIMAL(6, 4),
    anvisaProductCode: DataTypes.STRING(13),
    anvisaExemptionReason: DataTypes.STRING(255),
    anvisaMaxPrice: DataTypes.DECIMAL(13, 2),
    compositionItem: DataTypes.BOOLEAN,
    netWeight: DataTypes.DECIMAL(6, 3),
    duplicationAllowed: DataTypes.BOOLEAN,
    recurringItem: DataTypes.BOOLEAN,
    recurringPeriod: DataTypes.INTEGER,
    batchControl: DataTypes.BOOLEAN,
  },
  {
    tableName: "ITEMS",
    timestamps: true,
  }
);

export default Items;
